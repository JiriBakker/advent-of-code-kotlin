buildscript {
    ext.kotlin_version = '1.6.0'

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.6.0'
    id 'application'
}

mainClassName = project.hasProperty("year") ? "v" + getProperty("year") + "/MainKt" : "INPUT-YEAR"

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.0'
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
}

test {
    useJUnitPlatform()

    filter {
        includeTestsMatching project.hasProperty("year") ? "v" + getProperty("year") + ".*" : "*"
        if (project.hasProperty("lowMemory")) {
            excludeTestsMatching "*_highMemUsage"
        }
    }

    testLogging {
        showStandardStreams = true

        afterSuite { desc, result ->
            if (!desc.parent) { // will match the outermost suite
                println "\nTest results: ${result.resultType} (${result.testCount} tests run, ${result.successfulTestCount} succeeded, ${result.failedTestCount} failed, ${result.skippedTestCount} skipped)"
            }
        }
    }
}

